// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NSDGenerator.Server.Data;

#nullable disable

namespace NSDGenerator.Server.Migrations
{
    [DbContext(typeof(NsdContext))]
    [Migration("20220108170945_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("nsd")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NSDGenerator.Server.Data.Block", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlockType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DiagramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JsonData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blocks", "nsd");
                });

            modelBuilder.Entity("NSDGenerator.Server.Data.Diagram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("RootBlockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("RootBlockId")
                        .IsUnique()
                        .HasFilter("[RootBlockId] IS NOT NULL");

                    b.HasIndex("UserName");

                    b.ToTable("Diagram", "nsd");
                });

            modelBuilder.Entity("NSDGenerator.Server.Data.User", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Name");

                    b.ToTable("Users", "nsd");

                    b.HasData(
                        new
                        {
                            Name = "user@starzec.net",
                            Created = new DateTime(2022, 1, 8, 18, 9, 45, 64, DateTimeKind.Local).AddTicks(6522),
                            IsEnabled = true,
                            Password = "123"
                        });
                });

            modelBuilder.Entity("NSDGenerator.Server.Data.Diagram", b =>
                {
                    b.HasOne("NSDGenerator.Server.Data.Block", "RootBlock")
                        .WithOne("Diagram")
                        .HasForeignKey("NSDGenerator.Server.Data.Diagram", "RootBlockId");

                    b.HasOne("NSDGenerator.Server.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RootBlock");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NSDGenerator.Server.Data.Block", b =>
                {
                    b.Navigation("Diagram");
                });
#pragma warning restore 612, 618
        }
    }
}
