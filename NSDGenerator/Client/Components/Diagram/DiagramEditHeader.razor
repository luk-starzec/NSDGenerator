@inject NavigationManager navigationManager

<div class="diagram-edit-header__wrapper">

    @if (isAuthenticated)
    {
        <button class="diagram-edit-header__private-button" title="@buttonTitle" @onclick="ChangeIsPrivate">
            <img src="@buttonIcon" />
        </button>
    }

    <input class="diagram-edit-header__name-input @cssInput" @bind="@ViewModel.Name" @bind:event="oninput" placeholder="diagram name" />

</div>

@code {
    [Parameter] public DiagramVM ViewModel { get; set; }

    [CascadingParameter] Task<AuthenticationState> authenticationStateTask { get; set; }

    bool isAuthenticated;

    string buttonTitle => ViewModel.IsPrivate ? "Diagram visible to me only. Click to make public." : "Diagram visible to everyone. Click to make private.";
    string buttonIcon => ViewModel.IsPrivate ? "/assets/locked-icon.svg" : "/assets/unlocked-icon.svg";

    string cssInput => isAuthenticated ? "diagram-edit-header__name-input--with-button" : "";

    void ChangeIsPrivate() => ViewModel.IsPrivate = !ViewModel.IsPrivate;

    protected override async Task OnParametersSetAsync()
    {
        var authState = await authenticationStateTask;
        isAuthenticated = authState.User.Identity.IsAuthenticated;
    }

}
