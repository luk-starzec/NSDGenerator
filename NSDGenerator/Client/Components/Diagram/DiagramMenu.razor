
<div class="diagram-menu__wrapper">

    @if (EditMode)
    {
        <button class="diagram-menu__button" title="Switch to preview mode" @onclick="PreviewClick">
            <img src="/assets/preview-icon.svg" />
            <span>Preview</span>
        </button>
    }
    else
    {
        <button class="diagram-menu__button" title="Switch to edit mode" @onclick="EditClick">
            <img src="/assets/edit-icon.svg" />
            <span>Edit</span>
        </button>
    }

    <button class="diagram-menu__button" title="Download diagram" @onclick="DownloadClick">
        <img src="/assets/download-icon.svg" />
        <span>Download</span>
    </button>

    @if (showEditOptions)
    {
        <button class="diagram-menu__button" title="Save in cloud" @onclick="OnSave">
            <img src="/assets/cloud-icon.svg" />
            <span>Save</span>
        </button>

        <button class="diagram-menu__button" title="Delete diagram" @onclick="OnDelete">
            <img src="/assets/delete-icon.svg" />
            <span>Delete</span>
        </button>
    }

    <button class="diagram-menu__button" title="Copy as new diagram" @onclick="OnDuplicate">
        <img src="/assets/duplicate-icon.svg" />
        <span>Duplicate</span>
    </button>

    <button class="diagram-menu__button" title="Print diagram" @onclick="OnPrint">
        <img src="/assets/print-icon.svg" />
        <span>Print</span>
    </button>

</div>

@code {
    [Parameter] public bool EditMode { get; set; }

    [Parameter] public string DiagramOwner { get; set; }
    [Parameter] public string CurrentUser { get; set; }

    [Parameter] public EventCallback OnPreview { get; set; }
    [Parameter] public EventCallback OnEdit { get; set; }
    [Parameter] public EventCallback OnDownload { get; set; }
    [Parameter] public EventCallback OnSave { get; set; }
    [Parameter] public EventCallback OnDelete { get; set; }
    [Parameter] public EventCallback OnDuplicate { get; set; }
    [Parameter] public EventCallback OnPrint { get; set; }

    [CascadingParameter] Task<AuthenticationState> authenticationStateTask { get; set; }

    bool showEditOptions => CurrentUser is not null
                            && (CurrentUser == DiagramOwner || DiagramOwner is null);

    async Task PreviewClick() => await OnPreview.InvokeAsync();
    async Task EditClick() => await OnEdit.InvokeAsync();
    async Task DownloadClick() => await OnDownload.InvokeAsync();
    async Task SaveClick() => await OnSave.InvokeAsync();
    async Task DeleteClick() => await OnDelete.InvokeAsync();
    async Task DuplicateClick() => await OnDuplicate.InvokeAsync();
    async Task PrintClick() => await OnPrint.InvokeAsync();

}
