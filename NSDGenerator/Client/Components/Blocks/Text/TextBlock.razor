@inject AppState AppState
@implements IDisposable

@if (editMode && isSelected)
{
    <EditTextBlock Model="@Model" CssClass="@CssClass" OnChildAdded="@HandleChildAdded" />
}
else
{
    <PreviewTextBlock Model="@Model" CssClass="@CssClass" OnBlockSelected="@HandleBlockSelected" />
}

@if (@Model.Child is not null)
{
    <Block Model=@Model.Child CssClass="block__child" />
}


@code {
    [Parameter] public string CssClass { get; set; }

    [Parameter] public TextBlockModel Model { get; set; }

    [Parameter] public EventCallback<Guid> OnBlockChanged { get; set; }


    bool editMode { get; set; }

    Guid selectedBlockId = Guid.Empty;

    bool isSelected => Model.Id == selectedBlockId;

    protected override void OnInitialized()
    {
        AppState.OnChange += AppStateChanged;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }

    void AppStateChanged()
    {
        selectedBlockId = AppState.SelectedBlockId;
        editMode = AppState.EditMode;
    }

    void HandleBlockSelected(Guid id) => AppState.SetSelectedBlockId(id);

    void HandleChildAdded()
    {
        AppState.SetSelectedBlockId(Model.Child.Id);
        StateHasChanged();
    }
}
