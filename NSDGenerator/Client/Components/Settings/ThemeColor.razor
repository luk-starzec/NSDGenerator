@inject IThemeService themeService;

<div class="@cssWrapper">

    <input type="range" min="0" max="359" value="@hue" disabled="@Disabled"
           @oninput="OnInput" @onchange="OnChange" />

</div>

@code {
    [Parameter] public bool Disabled { get; set; }

    string cssWrapper => Disabled ? "theme-color__wrapper theme-color__wrapper--disabled" : "theme-color__wrapper";
    
    int hue = 0;

    protected override async Task OnInitializedAsync()
    {
        hue = await themeService.GetCurrentThemeHueAsync();
    }

    async Task OnChange(ChangeEventArgs args)
    {
        hue = int.Parse(args.Value.ToString());
        await themeService.SetColorHueAsync(hue);
    }

    async Task OnInput(ChangeEventArgs args)
    {
        await themeService.SetPreviewColorAsync(int.Parse(args.Value.ToString()));
    }

}
